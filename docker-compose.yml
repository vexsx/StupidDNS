networks:
  sni-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.20.16/29
          gateway: 172.20.20.17

services:
  warp:
    image: vexsx/warpindocker:v1
    container_name: warp
    restart: always
    device_cgroup_rules:
      - 'c 10:200 rwm'
    ports:
      - "1080:1080"
    environment:
      - WARP_SLEEP=10
      - GOST_ARGS=-L :1080 -F=127.0.0.1:40000
      #- WARP_LICENSE_KEY= # optional
      - WARP_ENABLE_NAT=1 # enable nat
    cap_add:
      # Docker already have them, these are for podman users
      - MKNOD
      - AUDIT_WRITE
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.all.accept_ra=2
    volumes:
      - ./data:/var/lib/cloudflare-warp
    networks:
      sni-net:
        ipv4_address: 172.20.20.18

  nginx-proxy:
    image: vexsx/nginx-proxy:v1.1
    container_name: nginx-proxy
    restart: always
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      sni-net:
        ipv4_address: 172.20.20.22
    ports:
      - "8086:8086"
          #  - "80:80"  # Expose port 80
          #  - "443:443"  # Expose port 443
    volumes:
      - ./start.sh:/app/start.sh
        #- /var/log/connection.log:/var/log/connection.log
        #- /var/log/warp_output.log:/var/log/warp_output.log

  dnsmasq:
    image: quay.io/aydin_381/dnsmasq:v1.0
    container_name: dnsmasq-proxy
    restart: always
    volumes:
      - ./domains.conf:/etc/dnsmasq.d/domains.conf
      - ./hosts:/etc/hosts
      - ./dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - "53:53/udp"  # Expose DNS port
    networks:
      sni-net:
        ipv4_address: 172.20.20.20